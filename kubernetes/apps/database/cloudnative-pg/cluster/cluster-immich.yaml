---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres-immich
spec:
  instances: 3
  # on upgrade of vectorchord, run: k exec -n self-hosted postgres-immich -- psql -d immich -c 'ALTER EXTENSION vchord UPDATE;'
  # renovate: datasource=docker depName=ghcr.io/tensorchord/cloudnative-vectorchord
  imageName: ghcr.io/tensorchord/cloudnative-vectorchord:16.9-0.4.2@sha256:649da2df5f079dd1f214e3a877cafd0208eff3779e9c60d14d243fbca5e11c97
  primaryUpdateStrategy: unsupervised
  storage:
    size: 20Gi
    storageClass: openebs-hostpath
  enableSuperuserAccess: true
  superuserSecret:
    name: cloudnative-pg-secret
  resources:
    requests:
      memory: 1Gi
    limits:
      memory: 2Gi
  affinity:
    enablePodAntiAffinity: true
    topologyKey: kubernetes.io/hostname
    podAntiAffinityType: required
    nodeSelector:
      kubernetes.io/arch: amd64
  postgresql:
    shared_preload_libraries:
      - "vchord.so"
    enableAlterSystem: true
    parameters:
      max_connections: "600"
      shared_buffers: 512MB
  bootstrap:
    initdb:
      postInitSQL:
        - CREATE EXTENSION vchord CASCADE;
        - CREATE EXTENSION earthdistance CASCADE;
  monitoring:
    enablePodMonitor: true
  backup:
    retentionPolicy: 7d
    barmanObjectStore:
      wal:
        compression: bzip2
        maxParallel: 8
      data:
        compression: bzip2
      destinationPath: &dest s3://cloudnative-pg/
      endpointURL: &s3 https://${SECRET_CLOUDFLARE_ACCOUNT_ID}.r2.cloudflarestorage.com
      # Note: serverName version needs to be inclemented
      # when recovering from an existing cnpg cluster
      serverName: postgres-immich-v4
      s3Credentials: &credentials
        accessKeyId:
          name: cloudnative-pg-secret
          key: aws-access-key-id
        secretAccessKey:
          name: cloudnative-pg-secret
          key: aws-secret-access-key
  # Note: previousCluster needs to be set to the name of the previous
  # cluster when recovering from an existing cnpg cluster
  # bootstrap:
  #   recovery:
  #     source: &previousCluster postgres-vector-v2
  #     recoveryTarget:
  #       # Time base target for the recovery
  #       targetTime: "2025-07-03 20:14:21.00000+02"
  # externalClusters:
  #   - name: *previousCluster
  #     barmanObjectStore:
  #       wal:
  #         compression: bzip2
  #         maxParallel: 8
  #       destinationPath: *dest
  #       endpointURL: *s3
  #       s3Credentials: *credentials

  # Note: Enable when migrating from a different major version
  # bootstrap:
  #   initdb:
  #     import:
  #       type: monolith
  #       databases:
  #         - "*"
  #       roles:
  #         - "*"
  #       source:
  #         externalCluster: &previousCluster postgres
  # externalClusters:
  #   - name: *previousCluster
  #     connectionParameters:
  #       # Use the correct IP or host name for the source database
  #       host: postgres-ro.database.svc
  #       user: postgres
  #       dbname: postgres
  #       sslmode: require
  #     password:
  #       name: cloudnative-pg-secret
  #       key: password