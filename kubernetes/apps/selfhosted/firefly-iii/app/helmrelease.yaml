---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app firefly-iii
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      firefly-iii:
        annotations:
          secret.reloader.stakater.com/reload: &secret firefly-secrets
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17
            envFrom: &envFrom
              - secretRef:
                  name: *secret
        containers:
          app:
            image:
              repository: docker.io/fireflyiii/core
              tag: version-6.4.0@sha256:4ec511c1792290421d8d0803c604d2d2a487b7d0b334547d32cfa23097d9e455
            resources:
              requests:
                cpu: 15m
                memory: 145M
              limits:
                memory: 261M
            probes: &probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
              liveness:
                enabled: true
              readiness:
                enabled: true
            envFrom:
              - secretRef:
                  name: *secret
            env:
              TZ: ${TZ}
              TRUSTED_PROXIES: "**"
              APP_URL: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
              DB_CONNECTION: pgsql
            securityContext: &sc
              seccompProfile: { type: "RuntimeDefault" }
              # readOnlyRootFilesystem: true # nginx init stuff
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
          cronjob:
            image:
              repository: alpine
              tag: 3.22.1
              pullPolicy: IfNotPresent
            command:
              - sh
            args:
              - -c
              - >-
                echo "0 */3 * * * wget -qO- http://firefly-iii:8080/api/v1/cron/$(STATIC_CRON_TOKEN)"
                | crontab -
                && crond -f -L /dev/stdout
            env:
              - name: STATIC_CRON_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: STATIC_CRON_TOKEN
      data-importer:
        containers:
          app:
            image:
              repository: docker.io/fireflyiii/data-importer
              tag: version-1.8.2@sha256:e43d8abbb86e09b90f4cd8ecdc3d80024778841bf579969aa219bf942c0ea9cc
            env:
              TZ: "${TZ}"
              TRUSTED_PROXIES: "**"
              APP_ENV: "production"
              APP_DEBUG: "false"
              LOG_CHANNEL: "stdout"
              FIREFLY_III_URL: http://firefly-iii.selfhosted.svc.cluster.local:8080
              VANITY_URL: *host
              FIREFLY_III_ACCESS_TOKEN:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: IMPORTER_PAT
            envFrom: *envFrom
            securityContext: *sc
            resources:
              requests:
                cpu: "10m"
                memory: "100Mi"
              limits:
                cpu: "1"
                memory: "1Gi"
            probes: *probes
    service:
      firefly-iii:
        controller: firefly-iii
        ports:
          http:
            port: &port 8080
      data-importer:
        controller: data-importer
        ports:
          http:
            port: *port
    ingress:
      app:
        enabled: true
        className: internal
        annotations:
          hajimari.io/icon: "mdi:cash"
        hosts:
          - host: &host "firefly.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: firefly-iii
                  port: http
        tls:
          - hosts:
              - *host
      data-importer:
        enabled: true
        className: internal
        annotations:
          hajimari.io/icon: "mdi:cash"
        hosts:
          - host: &host "firefly-importer.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: data-importer
                  port: http
        tls:
          - hosts:
              - *host  
    persistence:
      upload:
        existingClaim: *app
        advancedMounts:
          firefly-iii:
            app:
              - path: /var/www/html/storage/upload
      logs:
        type: emptyDir
        advancedMounts:
          data-importer:
            app:
              - path: /var/www/html/storage/logs