{
  enabled: true,
  timezone: "Europe/London",
  dependencyDashboard: true,
  dependencyDashboardTitle: "Renovate Dashboard",
  commitMessageSuffix: "[ci-skip]",
  commitBody: "Signed-off-by: Russell Hall <rust84@users.noreply.github.com>",
  // Do not notify on closed unmerged PRs
  suppressNotifications: ["prIgnoreNotification"],
  // Do not rebase PRs
  rebaseWhen: "conflicted",
  "helm-values": {
    fileMatch: ["./.+\\.yaml$"],
  },
  kubernetes: {
    fileMatch: ["\\.yaml$"],
    ignorePaths: ["flux-system/", ".github"],
  },
  regexManagers: [
    {
      fileMatch: ["./.+\\.yaml$"],
      matchStrings: [
        "registryUrl=(?<registryUrl>.*?)\n *chart: (?<depName>.*?)\n *version: (?<currentValue>.*)\n",
      ],
      datasourceTemplate: "helm",
    },
  ],
  packageRules: [
    // Setup datasources
    {
      datasources: ["helm"],
      commitMessageTopic: "Helm chart {{depName}}",
    },
    {
      datasources: ["docker"],
      commitMessageTopic: "Docker image {{depName}}",
      commitMessageExtra: "to {{#if isSingleVersion}}{{{toVersion}}}{{else}}{{{newValue}}}{{/if}}",
      updateTypes: ["major", "minor", "patch"],
      enabled: true,
    },
    // Add labels according to package and update types
    {
      datasources: ["docker"],
      updateTypes: ["major"],
      labels: ["renovate/image-release", "dependency/major"],
    },
    {
      datasources: ["docker"],
      updateTypes: ["minor"],
      labels: ["renovate/image-release", "dependency/minor"],
    },
    {
      datasources: ["docker"],
      updateTypes: ["patch"],
      labels: ["renovate/image-release", "dependency/patch"],
    },
    {
      datasources: ["helm"],
      updateTypes: ["major"],
      labels: ["renovate/helm-release", "dependency/major"],
    },
    {
      datasources: ["helm"],
      updateTypes: ["minor"],
      labels: ["renovate/helm-release", "dependency/minor"],
    },
    {
      datasources: ["helm"],
      updateTypes: ["patch"],
      labels: ["renovate/helm-release", "dependency/patch"],
    },
    // Custom versions
    {
      matchDatasources: ["docker"],
      versioning: "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-(?<compatibility>.*)$",
      matchPackageNames: ["blakeblackshear/frigate"],
    },
    {
      matchDatasources: ["docker"],
      versioning: "regex:^RELEASE\\.(?<major>\\d{4})-(?<minor>\\d{2})-(?<patch>\\d{2})",
      matchPackageNames: ["minio/minio"],
    },
    {
      datasources: ["docker"],
      versioning: "loose",
      packageNames: ["plexinc/pms-docker"],
    },
    // pin package versions
    {
      matchDatasources: ["docker"],
      allowedVersions: "<13",
      matchPackageNames: ["postgres"],
    },
    {
      matchDatasources: ["docker"],
      allowedVersions: "<2",
      matchPackageNames: ["influxdb"],
    },
    {
      matchDatasources: ["helm"],
      allowedVersions: "<2",
      matchPackageNames: ["metallb"],
    },
    // auto-updates
    {
      datasources: ["docker"],
      automerge: true,
      requiredStatusChecks: null,
      schedule: "after 1am and before 5am",
      updateTypes: ["minor", "patch"],
      packageNames: [
        "homeassistant/home-assistant",
        "ghcr.io/k8s-at-home/radarr",
        "ghcr.io/k8s-at-home/sonarr",
        "ghcr.io/k8s-at-home/prowlarr",
        "ghcr.io/k8s-at-home/nzbget",
        "ghcr.io/k8s-at-home/nzbhydra2",
        "sctx/overseerr",
        "plexinc/pms-docker",
        "nodered/node-red",
      ],
    },
    {
      datasources: ["helm"],
      automerge: true,
      requiredStatusChecks: null,
      schedule: "after 1am and before 5am",
      updateTypes: ["minor", "patch"],
      packageNames: ["grafana", "thanos", "kube-prometheus-stack"],
    },
  ],
}
