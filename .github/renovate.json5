{
  // General RenovateBot configuration
  "extends": [
    "config:recommended",
    "docker:enableMajor",
    ":disableRateLimiting",
    ":dependencyDashboard",
    ":semanticCommits",
    ":enablePreCommit",
    ":automergeDigest",
    ":automergeBranch",
    "github>rust84/k8s-gitops//.github/renovate/commitMessage",
    "github>rust84/k8s-gitops//.github/renovate/labels",
    "github>rust84/k8s-gitops//.github/renovate/semanticCommits",
    "github>rust84/k8s-gitops//.github/renovate/allowedVersions",
    "github>rust84/k8s-gitops//.github/renovate/autoMerge",
    "github>rust84/k8s-gitops//.github/renovate/groups"
  ],
  "platform": "github",
  "username": "rust84-bot[bot]",
  "repositories": ["rust84/k8s-gitops"],
  "onboarding": false,
  "requireConfig": "optional",
  "gitAuthor": "rust84-bot <103048774+rust84-bot[bot]@users.noreply.github.com>",
  "timezone": "Europe/London",
  "dependencyDashboardTitle": "Renovate Dashboard",
  "suppressNotifications": ["prIgnoreNotification"],
  "rebaseWhen": "conflicted",
  "helm-values": {
    "fileMatch": [
      "k8s/clusters/.+/helm-release\\.yaml$",
      "k8s/global/.+/helm-release\\.yaml$"
    ]
  },
  "kubernetes": {
    "fileMatch": ["k8s/clusters/.+\\.yaml$", "k8s/global/.+\\.yaml$"]
  },
  "flux": {"fileMatch": ["k8s/clusters/.+\\.yaml$", "k8s/global/.+\\.yaml$"]},
  "customManagers": [
    {
      "customType": "regex",
      "description": "Regex manager to read and process GitHub release artifacts",
      "fileMatch": ["k8s/.+\\.ya?ml$"],
      "matchStrings": [
        "https://github.com/(?<org>.*=?)/(?<repo>.*=?)/releases/download/(?<currentValue>.*=?)/.*"
      ],
      "datasourceTemplate": "github-releases",
      "depNameTemplate": "{{org}}/{{repo}}"
    },
    {
      "customType": "regex",
      "description": "Process CRD dependencies",
      "fileMatch": ["k8s/clusters/cluster-0/crds/.+\\.ya?ml$"],
      "matchStrings": [
        // GitRepository and Flux Kustomization where 'Git release/tag' matches 'Helm' version
        "registryUrl=(?<registryUrl>\\S+) chart=(?<depName>\\S+)\n.*?(?<currentValue>[^-\\s]*)\n",
        // Kustomization where 'GitHub release artifact URL' matches 'Docker image' version
        "datasource=(?<datasource>\\S+) image=(?<depName>\\S+)\n.*?-\\s(.*?)/(?<currentValue>[^/]+)/[^/]+\n"
      ],
      "datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}helm{{/if}}"
    },
    {
      "customType": "regex",
      "description": "Process various other dependencies",
      "fileMatch": ["k8s/.+\\.ya?ml$"],
      "matchStrings": [
        "datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( versioning=(?<versioning>\\S+))?\n.*?\"(?<currentValue>.*)\"\n"
      ],
      "datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}",
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}"
    },
    {
      "customType": "regex",
      "description": "Generic Docker image Regex manager",
      "fileMatch": ["k8s/clusters/.+\\.yaml$", "k8s/global/.+\\.yaml$"],
      "matchStrings": [
        "docker-image( registryUrl=(?<registryUrl>.*?))?( versioning=(?<versioning>.*=?))?\n.*: (?<depName>.*?):(?<currentValue>.*=?)"
      ],
      "datasourceTemplate": "docker",
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}docker{{/if}}",
      "registryUrlTemplate": "{{#if registryUrl}}{{{registryUrl}}}{{else}}{{/if}}"
    },
    {
      "customType": "regex",
      "description": "regexManager to read and process Traefik CRD's",
      "fileMatch": ["k8s/clusters/cluster-0/crds/traefik/.+\\.ya?ml$"],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?) chart=(?<depName>.*?)\n *tag: v(?<currentValue>.*)\n"
      ],
      "datasourceTemplate": "helm"
    },
    {
      "customType": "regex",
      "description": "Raw GitHub URL Regex manager",
      "fileMatch": ["k8s/.+\\.ya?ml$"],
      "matchStrings": [
        "https:\\/\\/raw.githubusercontent.com\\/(?<depName>[\\w\\d\\-_]+\\/[\\w\\d\\-_]+)\\/(?<currentValue>[\\w\\d\\.\\-_]+)\\/.*"
      ],
      "datasourceTemplate": "github-releases",
      "versioningTemplate": "semver"
    }
  ],
  "packageRules": [
    // Setup datasources
    {"matchDatasources": ["helm"], "ignoreDeprecated": true},
    {"matchDatasources": ["docker"], "commitMessageExtra": "to {{newVersion}}"},
    // Custom version schemes
    {
      "matchDatasources": ["docker"],
      "matchPackageNames": ["blakeblackshear/frigate"],
      "versioning": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-(?<compatibility>.*)$"
    },
    {
      "matchDatasources": ["docker"],
      "matchPackageNames": [
        "ghcr.io/linuxserver/calibre",
        "ghcr.io/linuxserver/calibre-web"
      ],
      "versioning": "regex:^version-v?(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)$"
    },
    // Version strategies
    {
      "matchDatasources": ["docker"],
      "matchPackageNames": ["ghcr.io/onedr0p/plex"],
      "versioning": "loose"
    },
    // Fly.io
    {"matchPackagePatterns": ["fly\\.toml$"], "matchUpdateTypes": ["docker"]}
  ]
}
