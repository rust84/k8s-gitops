name: build

on: [pull_request]

jobs:
  validate:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci-skip]')"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Shellcheck
        uses: reviewdog/action-shellcheck@v1
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review
          path: '.'
          pattern: '*.sh'
          exclude: './.git/*'

      # - name: Lint Yaml
      #   uses: ibiqlik/action-yamllint@v1

      - name: Kubeval
        uses: instrumenta/kubeval-action@master
        with:
          files: 'cluster/'

  compliance:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci-skip]')"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Execute Conftest Tests - Table Output
        id: conftest-table
        continue-on-error: true
        run: |
          result=$(docker run --rm --workdir /github/workspace \
            -v $(pwd):/github/workspace \
            instrumenta/conftest:v0.18.2 \
            test -o table -p security-policies/policies/ --all-namespaces --combine cluster/ --no-color || exit 0)
          result="${result//'%'/'%25'}"
          result="${result//$'\n'/'%0A'}"
          result="${result//$'\r'/'%0D'}"
          echo $result
          echo "::set-output name=result::$result"
      - name: Execute Conftest Tests - Stdout Output
        id: conftest
        continue-on-error: true
        run: |
          result=$(docker run --rm --workdir /github/workspace \
            -v $(pwd):/github/workspace \
            instrumenta/conftest:v0.18.2 \
            test -o stdout -p security-policies/policies/ --all-namespaces cluster/ --no-color || exit 0)
          result="${result//'%'/'%25'}"
          result="${result//$'\n'/'%0A'}"
          result="${result//$'\r'/'%0D'}"
          echo $result
          echo ::set-output name=result::$result
      - uses: actions/github-script@v3.1.1
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Kubernetes Conftest Validation ðŸ–Œ  \`${{ steps.conftest.outcome }}\`
            <details><summary>Show Kubernetes Conftest Report</summary>
            \`\`\`
            ${{ steps.conftest.outputs.result }}
            \`\`\`
            </details>
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`.\`, Workflow: \`${{ github.workflow }}\`*`;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })