---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://prometheus-community.github.io/helm-charts
      chart: kube-prometheus-stack
      version: 12.9.2
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
      interval: 10m
  test:
    enable: false # Enable helm test
  install:
    remediation: # perform remediation when helm install fails
      retries: 3
  upgrade:
    remediation: # perform remediation when helm upgrade fails
      retries: 3
      remediateLastFailure: true # remediate the last failure, when no retries remain
    cleanupOnFail: true
  rollback:
    timeout: 10m
    recreate: true
    cleanupOnFail: true
  dependsOn:
    - name: thanos
      namespace: monitoring
  timeout: 20m
  values:
    # defaultRules:
    #   rules:
    #     kubeApiserverAvailability: false
    #     kubeApiserver: false
    server:
      resources:
        requests:
          memory: 1000Mi
          cpu: 25m
        limits:
          memory: 2000Mi
    prometheusOperator:
      createCustomResource: true
      # prometheusConfigReloaderImage:
      #   repository: quay.io/coreos/prometheus-config-reloader
      #   tag: v0.41.1
      configmapReloadImage:
        repository: jimmidyson/configmap-reload
        tag: v0.4.0
    alertmanager:
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: rook-ceph-block
              resources:
                requests:
                  storage: 10Gi
        tolerations:
        - key: "arm"
          operator: "Exists"
        podMetadata:
          annotations:
            backup.velero.io/backup-volumes: alertmanager-kube-prometheus-stack-alertmanager-db
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "external"
      config:
        templates: ["*.tmpl"]
        route:
          group_by: ['job']
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 12h
          receiver: 'null'
          routes:
          - match:
              alertname: Watchdog
            receiver: 'null'
          - receiver: 'pagerduty'
            match:
              severity: critical
            continue: true
          - receiver: 'slack-monitoring'
      templateFiles:
        pagerduty-custom.tmpl: |-
          {{- define "pagerduty.custom.description" -}}[{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ if ne .CommonAnnotations.summary ""}}{{ .CommonAnnotations.summary }} {{ else if ne .CommonAnnotations.message ""}}{{ .CommonAnnotations.message }} {{ else if ne .CommonAnnotations.description ""}}{{ .CommonAnnotations.description }} {{ else }}{{ .CommonLabels.alertname }}{{ end }}{{- end -}}
        slack-templates.tmpl: |-
          # This builds the silence URL.  We exclude the alertname in the range
          # to avoid the issue of having trailing comma separator (%2C) at the end
          # of the generated URL
          {{ define "__alert_silence_link" -}}
              {{ .ExternalURL }}/#/silences/new?filter=%7B
              {{- range .CommonLabels.SortedPairs -}}
                  {{- if ne .Name "alertname" -}}
                      {{- .Name }}%3D"{{- .Value -}}"%2C%20
                  {{- end -}}
              {{- end -}}
              alertname%3D"{{ .CommonLabels.alertname }}"%7D
          {{- end }}

          {{ define "__alert_severity_prefix_title" -}}
              {{ if ne .Status "firing" -}}
              :100:
              {{- else if eq .CommonLabels.severity "critical" -}}
              :fire:
              {{- else if eq .CommonLabels.severity "warning" -}}
              :warning:
              {{- else if eq .CommonLabels.severity "info" -}}
              :information_source:
              {{- else -}}
              :question:
              {{- end }}
          {{- end }}

          {{/* First line of Slack alerts */}}
          {{ define "slack.title" -}}
              [{{ .Status | toUpper -}}
              {{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{- end -}}
              ] {{ template "__alert_severity_prefix_title" . }} {{ .CommonLabels.alertname }}
          {{- end }}

          {{/* Color of Slack attachment (appears as line next to alert )*/}}
          {{ define "slack.color" -}}
              {{ if eq .Status "firing" -}}
                  {{ if eq .CommonLabels.severity "warning" -}}
                      warning
                  {{- else if eq .CommonLabels.severity "critical" -}}
                      danger
                  {{- else -}}
                      #439FE0
                  {{- end -}}
              {{ else -}}
              good
              {{- end }}
          {{- end }}

          {{/* The text to display in the alert */}}
          {{ define "slack.text" -}}
              {{ range .Alerts }}
                  {{- if .Annotations.message }}
                      {{ .Annotations.message }}
                  {{- end }}
                  {{- if .Annotations.description }}
                      {{ .Annotations.description }}
                  {{- end }}
              {{- end }}
          {{- end }}
    grafana:
      image:
        repository: grafana/grafana
        tag: 7.3.6
      # tolerations:
      # - key: "arm"
      #   operator: "Exists"
      deploymentStrategy:
        type: Recreate
      podAnnotations:
        backup.velero.io/backup-volumes: storage
      persistence:
        enabled: true
        storageClassName: "rook-ceph-block"
        size: 10Gi
        accessModes:
        - ReadWriteOnce
      env:
        GF_EXPLORE_ENABLED: true
        GF_PANELS_DISABLE_SANITIZE_HTML: true
        GF_LOG_FILTERS: rendering:debug
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "external"
      plugins:
      - natel-discrete-panel
      - grafana-piechart-panel
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
          - name: 'default'
            orgId: 1
            folder: ''
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
      dashboards:
        default:
          nginx-dashboard:
            url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
            datasource: Prometheus
          ceph-cluster:
            url: https://grafana.com/api/dashboards/2842/revisions/11/download
            datasource: Prometheus
          ceph-osd:
            url: https://grafana.com/api/dashboards/5336/revisions/3/download
            datasource: Prometheus
          ceph-pools:
            url: https://grafana.com/api/dashboards/5342/revisions/3/download
            datasource: Prometheus
          vernemq:
            url: https://raw.githubusercontent.com/vernemq/vernemq/master/metrics_scripts/grafana/VerneMQ%20Node%20Metrics.json
            datasource: Prometheus
          home-assistant:
            url: https://raw.githubusercontent.com/rust84/k8s-gitops/master/monitoring/kube-prometheus-stack/grafana-dashboards/home_assistant.json
            datasource: home_assistant
          velero:
            url: https://grafana.com/api/dashboards/11055/revisions/2/download
            datasource: Prometheus
          blocky:
            url: https://raw.githubusercontent.com/rust84/k8s-gitops/master/monitoring/kube-prometheus-stack/grafana-dashboards/blocky.json
            datasource: Prometheus
          uptimerobot:
            url: https://raw.githubusercontent.com/lekpamartin/uptimerobot_exporter/master/dashboards/grafana.json
            datasource: Prometheus
          version-checker:
            url: https://grafana.com/api/dashboards/12833/revisions/1/download
            datasource: Prometheus
          thanos-overview:
            url: https://raw.githubusercontent.com/thanos-io/thanos/b5431c44a6f40fd8f2aef54747dd1eaf9dfcbd25/examples/dashboards/overview.json
            datasource: Prometheus
          thanos-compact:
            url: https://raw.githubusercontent.com/thanos-io/thanos/b5431c44a6f40fd8f2aef54747dd1eaf9dfcbd25/examples/dashboards/compact.json
            datasource: Prometheus
          thanos-querier:
            url: https://raw.githubusercontent.com/thanos-io/thanos/b5431c44a6f40fd8f2aef54747dd1eaf9dfcbd25/examples/dashboards/query.json
            datasource: Prometheus
          thanos-store:
            url: https://raw.githubusercontent.com/thanos-io/thanos/b5431c44a6f40fd8f2aef54747dd1eaf9dfcbd25/examples/dashboards/store.json
            datasource: Prometheus
          thanos-receiver:
            url: https://raw.githubusercontent.com/thanos-io/thanos/b5431c44a6f40fd8f2aef54747dd1eaf9dfcbd25/examples/dashboards/receive.json
            datasource: Prometheus
          thanos-sidecar:
            url: https://raw.githubusercontent.com/thanos-io/thanos/b5431c44a6f40fd8f2aef54747dd1eaf9dfcbd25/examples/dashboards/sidecar.json
            datasource: Prometheus
          thanos-ruler:
            url: https://raw.githubusercontent.com/thanos-io/thanos/b5431c44a6f40fd8f2aef54747dd1eaf9dfcbd25/examples/dashboards/rule.json
            datasource: Prometheus
          thanos-replicate:
            url: https://raw.githubusercontent.com/thanos-io/thanos/b5431c44a6f40fd8f2aef54747dd1eaf9dfcbd25/examples/dashboards/bucket-replicate.json
            datasource: Prometheus
          toolkit-cluster:
            url: https://raw.githubusercontent.com/fluxcd/toolkit/main/manifests/monitoring/grafana/dashboards/cluster.json
            datasource: Prometheus
          toolkit-control-plane:
            url: https://raw.githubusercontent.com/fluxcd/toolkit/main/manifests/monitoring/grafana/dashboards/control-plane.json
            datasource: Prometheus
      sidecar:
        datasources:
          enabled: true
          defaultDatasourceEnabled: false
      additionalDataSources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://thanos-query-http:10902/
        isDefault: true
      - name: loki
        type: loki
        access: proxy
        url: http://loki.logs.svc.cluster.local:3100
      - name: home_assistant
        type: influxdb
        access: proxy
        url: http://influxdb:8086
        database: home_assistant
      - name: speedtests
        type: influxdb
        access: proxy
        url: http://influxdb:8086
        database: speedtests
      - name: uptimerobot
        type: influxdb
        access: proxy
        url: http://influxdb:8086
        database: uptimerobot
      grafana.ini:
        paths:
          data: /var/lib/grafana/data
          logs: /var/log/grafana
          plugins: /var/lib/grafana/plugins
          provisioning: /etc/grafana/provisioning
        analytics:
          check_for_updates: true
        log:
          mode: console
        grafana_net:
          url: https://grafana.net
    kubeEtcd:
      enabled: false
    kubeControllerManager:
      enabled: false
    kubeScheduler:
      enabled: false
    kubelet:
      serviceMonitor:
        metricRelabelings:
        - action: replace
          sourceLabels:
          - node
          targetLabel: instance
    prometheus-node-exporter:
      tolerations:
      - key: "arm"
        operator: "Exists"
    prometheus:
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "external"
      prometheusSpec:
        # image:
        #   repository: quay.io/prometheus/prometheus
        #   tag: v2.9.1
        replicas: 2
        replicaExternalLabelName: "replica"
        ruleSelector: {}
        ruleNamespaceSelector: {}
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelector: {}
        serviceMonitorNamespaceSelector: {}
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelector: {}
        podMonitorNamespaceSelector: {}
        podMonitorSelectorNilUsesHelmValues: false
        retention: 6h
        enableAdminAPI: true
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: rook-ceph-block
              resources:
                requests:
                  storage: 100Gi
        # tolerations:
        # - key: "arm"
        #   operator: "Exists"
        podMetadata:
          annotations:
            backup.velero.io/backup-volumes: prometheus-kube-prometheus-stack-prometheus-db
        thanos:
          image: quay.io/thanos/thanos:v0.17.0
          version: v0.17.0
          objectStorageConfig:
            name: thanos
            key: object-store.yaml
        # additionalScrapeConfigs:
        # - job_name: 'upsc-exporter'
        #   static_configs:
        #   - targets:
        #     - pi-upsmon:9102
  valuesFrom:
  - kind: Secret
    name: "kube-prometheus-stack-helm-values"
