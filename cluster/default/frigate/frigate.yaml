---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: frigate
  namespace: default
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://blakeblackshear.github.io/blakeshome-charts/
      chart: frigate
      version: 5.0.1
      sourceRef:
        kind: HelmRepository
        name: blakeshome-charts
        namespace: flux-system
      interval: 10m
  test:
    enable: false # Enable helm test
  install:
    remediation: # perform remediation when helm install fails
      retries: 3
  upgrade:
    remediation: # perform remediation when helm upgrade fails
      retries: 3
      remediateLastFailure: true # remediate the last failure, when no retries remain
    cleanupOnFail: true
  rollback:
    timeout: 10m
    recreate: true
    cleanupOnFail: true
  values:
    image:
      repository: blakeblackshear/frigate
      tag: 0.8.4-amd64
    #   pullPolicy: Always
    initContainer:
      image:
        repository: busybox
        tag: 1.33.1
    coral:
      enabled: false
    timezone: "Europe/London"
    config: |
      mqtt:
        host: vernemq.default.svc
        topic_prefix: frigate

      database:
        path: /data/frigate.db

      detectors:
        cpu1:
          type: cpu
        cpu2:
          type: cpu

      ffmpeg:
        hwaccel_args:
          - -hwaccel
          - vaapi
          - -hwaccel_device
          - /dev/dri/renderD128
          - -hwaccel_output_format
          - yuv420p

      objects:
        track:
          - person
          - dog
          - cat
        filters:
          person:
            min_area: 1500
            max_area: 100000
            threshold: 0.7
          dog:
            min_area: 1000
            max_area: 10000
            threshold: 0.7
          cat:
            min_area: 1000
            max_area: 10000
            threshold: 0.7

      cameras:
        driveway:
          ffmpeg:
            inputs:
              - path: rtsp://rtsp:{FRIGATE_RTSP_PASSWORD}@10.30.0.111:554/av_stream/ch0
                roles:
                  - detect
                  - rtmp
                  - clips
                  - record
          height: 1920
          width: 1080
          fps: 10
          clips:
            enabled: true
            objects:
              - car
              - person
              - dog
              - cat
          snapshots:
            enabled: true
            timestamp: False
            bounding_box: true
            crop: False
          record:
            enabled: false
            retain_days: 5
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: "nginx"
    # affinity:
    #   nodeAffinity:
    #     requiredDuringSchedulingIgnoredDuringExecution:
    #       nodeSelectorTerms:
    #         - matchExpressions:
    #             - {key: "feature.node.kubernetes.io/custom-coral-tpu", operator: In, values: ["true"]}
    resources:
      requests:
        memory: 1000Mi
        cpu: 750m
        gpu.intel.com/i915: 1
      limits:
        memory: 2500Mi
        gpu.intel.com/i915: 1
    probes:
      startup:
        enabled: true
    persistence:
      data:
        enabled: true
        storageClass: rook-ceph-block
    shmSize: 2Gi
    extraVolumes:
      - name: media
        persistentVolumeClaim:
          claimName: nfs-media-pvc
      - name: cache
        emptyDir:
          medium: Memory
    extraVolumeMounts:
      - mountPath: /media
        name: media
        subPath: Frigate
      - mountPath: /tmp/cache
        name: cache
  valuesFrom:
  - kind: Secret
    name: "frigate-helm-values"
    optional: false