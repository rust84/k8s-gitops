---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: vector-aggregator
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      chart: vector
      version: 0.19.2
      sourceRef:
        kind: HelmRepository
        name: vector-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: timberio/vector
      tag: 0.27.1-debian

    role: "Stateless-Aggregator"

    podMonitor:
      enabled: true

    service:
      enabled: true
      type: LoadBalancer

    tolerations:
      - key: node-role.kubernetes.io/control-plane
        effect: NoSchedule

    customConfig:
      data_dir: /vector-data-dir

      api:
        enabled: false

      # Sources
      sources:
        kubernetes_logs:
          address: 0.0.0.0:6000
          type: vector
          version: "2"

        talos_kernel_logs:
          address: 0.0.0.0:6050
          type: socket
          mode: udp
          max_length: 102400
          decoding:
            codec: json
          host_key: __host

        talos_service_logs:
          address: 0.0.0.0:6051
          type: socket
          mode: udp
          max_length: 102400
          decoding:
            codec: json
          host_key: __host

      # Transforms
      transforms:
        kubernetes_logs_remap:
          type: remap
          inputs:
            - kubernetes_logs
          source: |
            # Standardize 'app' index
            .custom_app_name = .pod_labels."app.kubernetes.io/name" || .pod_labels.app || .pod_labels."k8s-app" || "unknown"
        talos_kernel_logs_xform:
          type: remap
          inputs:
            - talos_kernel_logs
          source: |-
            r1, err = replace(.__host, "10.20.0.120", "cp-0")
            r2 = replace(r1, "10.20.0.115", "cp-1")
            r3 = replace(r2, "10.20.0.121", "cp-2")
            r4 = replace(r3, "10.20.0.128", "node-0")
            r5 = replace(r4, "10.20.0.125", "node-1")
            .node = replace(r5, "10.20.0.127", "node-2")
        talos_service_logs_xform:
          type: remap
          inputs:
            - talos_service_logs
          source: |-
            r1, err = replace(.__host, "10.20.0.120", "cp-0")
            r2 = replace(r1, "10.20.0.115", "cp-1")
            r3 = replace(r2, "10.20.0.121", "cp-2")
            r4 = replace(r3, "10.20.0.128", "node-0")
            r5 = replace(r4, "10.20.0.125", "node-1")
            .node = replace(r5, "10.20.0.127", "node-2")

      # Sinks
      sinks:
        loki_kubernetes:
          type: loki
          inputs:
            - kubernetes_logs
          endpoint: http://loki-gateway:80
          encoding:
            codec: json
          batch:
            max_bytes: 2049000
          out_of_order_action: rewrite_timestamp
          remove_label_fields: true
          remove_timestamp: true
          labels:
            app: >-
              {{`{{ custom_app_name }}`}}
            namespace: >-
              {{`{{ kubernetes.pod_namespace }}`}}
            hostname: >-
              {{`{{ kubernetes.pod_node_name }}`}}
        talos_kernel:
          type: loki
          inputs:
            - talos_kernel_logs_xform
          endpoint: http://loki-gateway:80
          encoding:
            codec: json
            except_fields:
              - __host
          batch:
            max_bytes: 1048576
          out_of_order_action: rewrite_timestamp
          labels:
            node: >-
              {{`{{ node }}`}}
            service: >-
              {{`{{ facility }}`}}
            namespace: "talos:kernel"

        talos_service:
          type: loki
          inputs:
            - talos_service_logs_xform
          endpoint: http://loki-gateway:80
          encoding:
            codec: json
            except_fields:
              - __host
          batch:
            max_bytes: 400000
          out_of_order_action: rewrite_timestamp
          labels:
            node: >-
              {{`{{ node }}`}}
            service: >-
              {{`{{ "talos-service" }}`}}
            namespace: "talos:service"

    podAnnotations:
      configmap.reloader.stakater.com/reload: vector-aggregator

    resources:
      requests:
        cpu: 22m
        memory: 145M
      limits:
        memory: 500M

  postRenderers:
    - kustomize:
        patchesJson6902:
          - target:
              kind: Service
              name: vector-aggregator
            patch:
              - op: add
                path: /spec/loadBalancerIP
                value: ${SVC_VECTOR_AGGREGATOR}
