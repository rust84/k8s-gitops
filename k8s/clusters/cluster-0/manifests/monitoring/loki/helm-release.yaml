---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: loki
  namespace: monitoring
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: loki
      version: 6.10.0
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    loki:
      podAnnotations:
        secret.reloader.stakater.com/reload: loki-secret
      ingester:
        chunk_encoding: snappy
      storage:
        type: s3
        s3:
          s3ForcePathStyle: true
          insecure: true
      schemaConfig:
        configs:
          - from: "2023-09-21"
            store: tsdb
            object_store: s3
            schema: v12
            index:
              prefix: loki_index_
              period: 24h
          - from: "2024-04-01"
            store: tsdb
            object_store: s3
            schema: v13
            index:
              prefix: loki_index_
              period: 24h
      structuredConfig:
        auth_enabled: false
        server:
          log_level: info
          http_listen_port: 3100
          grpc_listen_port: 9095
          grpc_server_max_recv_msg_size: 8388608
          grpc_server_max_send_msg_size: 8388608
        limits_config:
          ingestion_burst_size_mb: 128
          ingestion_rate_mb: 64
          max_query_parallelism: 100
          per_stream_rate_limit: 64M
          per_stream_rate_limit_burst: 128M
          reject_old_samples: true
          reject_old_samples_max_age: 168h
          retention_period: 30d
          shard_streams:
            enabled: true
          split_queries_by_interval: 1h
        query_scheduler:
          max_outstanding_requests_per_tenant: 4096
        frontend:
          max_outstanding_per_tenant: 4096
        ruler:
          enable_api: true
          enable_alertmanager_v2: true
          alertmanager_url: http://kube-prometheus-stack-alertmanager:9093
          storage:
            type: local
            local:
              directory: /rules
          rule_path: /tmp/scratch
        compactor:
          working_directory: /var/loki/compactor
          delete_request_store: s3
          retention_enabled: true
        analytics:
          reporting_enabled: false
    gateway:
      replicas: 3
      enabled: true
      image:
        registry: ghcr.io
        repository: nginxinc/nginx-unprivileged
        tag: 1.27-alpine@sha256:313aa0507d49c4e76b9f3ba43012688c8bf2af40e1a32024adeabaf06484a89f
      deploymentStrategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 50%
          maxSurge: 50%
      topologySpreadConstraints:
        - maxSkew: 2
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: loki
              app.kubernetes.io/component: gateway
      ingress:
        enabled: true
        ingressClassName: internal
        hosts:
          - host: &host "loki.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - secretName: "tls.loki"
            hosts:
              - *host
    write:
      replicas: 3
      persistence:
        size: 10Gi
        storageClass: rook-ceph-block
    backend:
      replicas: 3
      persistence:
        size: 10Gi
        storageClass: rook-ceph-block
      extraVolumeMounts:
        - name: rules
          mountPath: /rules/fake
        - name: scratch
          mountPath: /tmp/scratch
      extraVolumes:
        - name: rules
          configMap:
            name: loki-alerting-rules
        - name: scratch
          emptyDir: {}
    read:
      replicas: 3
      persistence:
        size: 10Gi
        storageClass: rook-ceph-block
      extraVolumeMounts:
        - name: rules
          mountPath: /rules
      extraVolumes:
        - name: rules
          emptyDir: {}
    monitoring:
      dashboards:
        annotations:
          grafana_folder: Loki
      rules:
        enabled: false
      serviceMonitor:
        enabled: false
        metricsInstance:
          enabled: false
      selfMonitoring:
        enabled: false
        grafanaAgent:
          installOperator: false
    lokiCanary:
      enabled: false
    test:
      enabled: false
  valuesFrom:
    - targetPath: loki.storage.bucketNames.chunks
      kind: ConfigMap
      name: loki-chunks-bucket-v1
      valuesKey: BUCKET_NAME
    - targetPath: loki.storage.bucketNames.ruler
      kind: ConfigMap
      name: loki-chunks-bucket-v1
      valuesKey: BUCKET_NAME
    - targetPath: loki.storage.bucketNames.admin
      kind: ConfigMap
      name: loki-chunks-bucket-v1
      valuesKey: BUCKET_NAME
    - targetPath: loki.storage.s3.endpoint
      kind: ConfigMap
      name: loki-chunks-bucket-v1
      valuesKey: BUCKET_HOST
    - targetPath: loki.storage.s3.accessKeyId
      kind: Secret
      name: loki-chunks-bucket-v1
      valuesKey: AWS_ACCESS_KEY_ID
    - targetPath: loki.storage.s3.secretAccessKey
      kind: Secret
      name: loki-chunks-bucket-v1
      valuesKey: AWS_SECRET_ACCESS_KEY
