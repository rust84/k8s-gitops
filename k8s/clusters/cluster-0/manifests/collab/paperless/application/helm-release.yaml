---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: paperless
  namespace: collab
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 0.2.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
      remediateLastFailure: true
    cleanupOnFail: true
  values:
    global:
      nameOverride: paperless

    image:
      repository: ghcr.io/paperless-ngx/paperless-ngx
      tag: 1.9.2

    env:
      COMPOSE_PROJECT_NAME: paperless
      PAPERLESS_PORT: 8000
      PAPERLESS_CONSUMER_POLLING: "60"
      PAPERLESS_CONSUMER_RECURSIVE: "true"
      PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: "true"
      PAPERLESS_CONSUMER_ENABLE_BARCODES: "true"
      PAPERLESS_DBHOST: 10.20.0.144
      PAPERLESS_DBNAME: paperless
      PAPERLESS_REDIS: redis://paperless-redis-master.collab.svc.cluster.local:6379
      PAPERLESS_TASK_WORKERS: 2
      PAPERLESS_TIME_ZONE: "${TZ}"
      PAPERLESS_URL: https://paperless.${SECRET_DOMAIN}
      USERMAP_GID: 65543
    envFrom:
      - secretRef:
          name: paperless-secrets

    service:
      main:
        ports:
          http:
            port: 8000

    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          kubernetes.io/tls-acme: "true"
          cert-manager.io/cluster-issuer: letsencrypt-prod
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "network-rfc1918@kubernetescrd"
          hajimari.io/enable: "true"
          hajimari.io/icon: file-outline
        hosts:
          - host: paperless.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "paperless.${SECRET_DOMAIN}"
            secretName: tls.paperless

    persistence:
      data:
        enabled: true
        type: nfs
        server: "nas.${SECRET_DOMAIN}"
        path: /mnt/borg/documents/paperless/data
        mountPath: /usr/src/paperless/data
      media:
        enabled: true
        type: nfs
        server: "nas.${SECRET_DOMAIN}"
        path: /mnt/borg/documents/paperless/media
        mountPath: /usr/src/paperless/media
      consume:
        enabled: true
        type: nfs
        server: "nas.${SECRET_DOMAIN}"
        path: /mnt/borg/documents/paperless/incoming
        mountPath: /usr/src/paperless/consume
      export:
        enabled: true
        type: nfs
        server: "nas.${SECRET_DOMAIN}"
        path: /mnt/borg/documents/paperless/export
        mountPath: /usr/src/paperless/export

    resources:
      requests:
        cpu: 23m
        memory: 2975M
      limits:
        memory: 6572M

  valuesFrom:
    - kind: Secret
      name: database-paperless-user
      valuesKey: PASSWORD
      targetPath: env.PAPERLESS_DBPASS
      optional: false
    - kind: Secret
      name: database-paperless-user
      valuesKey: LOGIN
      targetPath: env.PAPERLESS_DBUSER
      optional: false
