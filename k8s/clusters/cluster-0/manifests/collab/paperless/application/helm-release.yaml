---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: paperless
  namespace: collab
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
      remediateLastFailure: true
    cleanupOnFail: true
  values:
    global:
      nameOverride: paperless

    image:
      repository: ghcr.io/paperless-ngx/paperless-ngx
      tag: 1.16.5

    env:
      COMPOSE_PROJECT_NAME: paperless
      PAPERLESS_PORT: &port 8000
      PAPERLESS_CONSUMER_POLLING: "60"
      PAPERLESS_CONSUMER_RECURSIVE: "true"
      PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: "true"
      PAPERLESS_CONSUMER_ENABLE_BARCODES: "true"
      PAPERLESS_DBHOST: 10.20.0.144
      PAPERLESS_DBNAME: paperless
      PAPERLESS_REDIS: redis://localhost:6379
      PAPERLESS_TASK_WORKERS: 2
      PAPERLESS_TIME_ZONE: "${TZ}"
      PAPERLESS_URL: https://paperless.${SECRET_DOMAIN}
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://localhost:3000
      PAPERLESS_TIKA_ENDPOINT: http://localhost:9998
      USERMAP_GID: 65543

    envFrom:
      - secretRef:
          name: paperless-secrets

    service:
      main:
        ports:
          http:
            port: *port

    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          kubernetes.io/tls-acme: "true"
          cert-manager.io/cluster-issuer: letsencrypt-prod
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "network-rfc1918@kubernetescrd"
          hajimari.io/enable: "true"
          hajimari.io/icon: file-outline
        hosts:
          - host: paperless.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "paperless.${SECRET_DOMAIN}"
            secretName: tls.paperless

    persistence:
      data:
        enabled: true
        type: nfs
        server: "nas.${SECRET_DOMAIN}"
        path: /mnt/borg/documents/paperless/data
        mountPath: /usr/src/paperless/data
      media:
        enabled: true
        type: nfs
        server: "nas.${SECRET_DOMAIN}"
        path: /mnt/borg/documents/paperless/media
        mountPath: /usr/src/paperless/media
      consume:
        enabled: true
        type: nfs
        server: "nas.${SECRET_DOMAIN}"
        path: /mnt/borg/documents/paperless/incoming
        mountPath: /usr/src/paperless/consume
      export:
        enabled: true
        type: nfs
        server: "nas.${SECRET_DOMAIN}"
        path: /mnt/borg/documents/paperless/export
        mountPath: /usr/src/paperless/export

    sidecars:
      redis:
        name: redis
        image: public.ecr.aws/docker/library/redis:7.0.12@sha256:08a82d4bf8a8b4dd94e8f5408cdbad9dd184c1cf311d34176cd3e9972c43f872
        imagePullPolicy: IfNotPresent
      gotenburg:
        name: gotenburg
        image: thecodingmachine/gotenberg:7.8.3@sha256:a6471b6f4060fd3072438c3c35028f1f1192e0808812b387fe7dd52f13c75525
        env:
          - name: DISABLE_GOOGLE_CHROME
            value: '1'
      tika:
        image: ghcr.io/paperless-ngx/tika:2.7.0-full@sha256:d8b6ce1b8b0a25c4be2fc3eafe61679a056bc4bca57907ebcfae890cf42024cd
        name: tika
        imagePullPolicy: Always

    resources:
      requests:
        cpu: 10m
        memory: 978M
      limits:
        memory: 1562M

  valuesFrom:
    - kind: Secret
      name: database-paperless-user
      valuesKey: PASSWORD
      targetPath: env.PAPERLESS_DBPASS
      optional: false
    - kind: Secret
      name: database-paperless-user
      valuesKey: LOGIN
      targetPath: env.PAPERLESS_DBUSER
      optional: false
