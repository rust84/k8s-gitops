---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: paperless
  namespace: collab
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      annotations:
        reloader.stakater.com/auto: 'true'
    global:
      nameOverride: paperless
    initContainers:
      init-db:
        image: ghcr.io/onedr0p/postgres-init:16.1@sha256:dda75857689116d9c233ec0978cb905da0f952618dfbe1b8731aa1071044eaf0
        imagePullPolicy: IfNotPresent
        envFrom: &envFrom
          - secretRef:
              name: paperless-secret
    image:
      repository: ghcr.io/paperless-ngx/paperless-ngx
      tag: 2.3.3
    env:
      COMPOSE_PROJECT_NAME: paperless
      PAPERLESS_PORT: &port 8000
      PAPERLESS_CONSUMER_POLLING: "60"
      PAPERLESS_CONSUMER_RECURSIVE: "true"
      PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: "true"
      PAPERLESS_CONSUMER_ENABLE_BARCODES: "true"
      PAPERLESS_REDIS: redis://localhost:6379
      PAPERLESS_TASK_WORKERS: 2
      PAPERLESS_TIME_ZONE: "${TZ}"
      PAPERLESS_URL: https://paperless.${SECRET_DOMAIN}
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://localhost:3000
      PAPERLESS_TIKA_ENDPOINT: http://localhost:9998
      USERMAP_GID: 65543
      PAPERLESS_DEBUG: "false"
    envFrom: *envFrom
    service:
      main:
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        ingressClassName: internal
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: file-outline
          nginx.ingress.kubernetes.io/proxy-body-size: 4G
        hosts:
          - host: paperless.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "paperless.${SECRET_DOMAIN}"
            secretName: tls.paperless
    persistence:
      data:
        enabled: true
        type: nfs
        server: "nas.${SECRET_DOMAIN}"
        path: /mnt/borg/documents/paperless/data
        mountPath: /usr/src/paperless/data
      media:
        enabled: true
        type: nfs
        server: "nas.${SECRET_DOMAIN}"
        path: /mnt/borg/documents/paperless/media
        mountPath: /usr/src/paperless/media
      consume:
        enabled: true
        type: nfs
        server: "nas.${SECRET_DOMAIN}"
        path: /mnt/borg/documents/paperless/incoming
        mountPath: /usr/src/paperless/consume
      export:
        enabled: true
        type: nfs
        server: "nas.${SECRET_DOMAIN}"
        path: /mnt/borg/documents/paperless/export
        mountPath: /usr/src/paperless/export
    sidecars:
      redis:
        name: redis
        image: public.ecr.aws/docker/library/redis:7.2.4@sha256:b5ddcd52d425a8e354696c022f392fe45fca928f68d6289e6bb4a709c3a74668
        imagePullPolicy: IfNotPresent
      gotenburg:
        name: gotenburg
        image: thecodingmachine/gotenberg:8.0.1@sha256:4c441b60ce90a0844c3f68e086daec29df95efd236b5f4e411c4ea3ed44edba2
        env:
          - name: DISABLE_GOOGLE_CHROME
            value: '1'
      tika:
        image: ghcr.io/paperless-ngx/tika:2.9.0-full@sha256:d27cbb3ff6c3c1dcf74fb424f63426199d1393fda2f4ed342c5c3756379d0a8e
        name: tika
        imagePullPolicy: Always
    resources:
      requests:
        cpu: 10m
        memory: 1312M
      limits:
        memory: 3000M
