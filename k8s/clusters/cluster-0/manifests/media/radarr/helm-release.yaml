---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app radarr
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: *app
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/radarr-develop
              tag: 5.3.2.8504@sha256:d87bccdcac992e5d43f93f355ee714e137b21b77df21e250bc9b3ac4d14708db
            env:
              TZ: "${TZ}"
              RADARR__INSTANCE_NAME: Radarr
              RADARR__PORT: &port 7878
              RADARR__LOG_LEVEL: info
              RADARR__AUTHENTICATION_METHOD: External
              RADARR__THEME: dark
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 121m
                memory: 471Mi
              limits:
                memory: 471Mi
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups: [100]
    service:
      main:
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        className: internal
        annotations:
          auth.home.arpa/enabled: "true"
          nginx.ingress.kubernetes.io/auth-signin: https://radarr.${SECRET_DOMAIN}/outpost.goauthentik.io/start?rd=$escaped_request_uri
          hajimari.io/enable: "true"
          hajimari.io/icon: "filmstrip"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - secretName: &tls "tls.{{ .Release.Name }}"
            hosts:
              - *host
      api:
        enabled: true
        className: internal
        hosts:
          - host: *host
            paths:
              - path: /api
                service:
                  name: main
                  port: http
        tls:
          - secretName: *tls
            hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: radarr-config
      media:
        enabled: true
        type: nfs
        server: "nas.${SECRET_DOMAIN}"
        path: /mnt/borg/share
        mountPath: /media
        readOnly: false
      backup:
        enabled: true
        type: nfs
        server: "nas.${SECRET_DOMAIN}"
        path: /mnt/apps/backups/radarr
        mountPath: /config/Backups
