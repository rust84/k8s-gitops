---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sonarr
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: *app
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/sonarr-develop
              tag: 4.0.6.1847@sha256:bc7a8d9124a14562644a21a4209e3ac9424c9787ae179f39da83549d23a6d430
            env:
              TZ: "${TZ}"
              SONARR__INSTANCE_NAME: Sonarr
              SONARR__PORT: &port 8989
              SONARR__LOG_LEVEL: info
              SONARR__AUTHENTICATION_METHOD: External
              SONARR__THEME: dark
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 300m
                memory: 269Mi
              limits:
                memory: 269Mi
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups: 
              - 65542
    service:
      main:
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        className: internal
        annotations:
          auth.home.arpa/enabled: "true"
          nginx.ingress.kubernetes.io/auth-signin: https://sonarr.${SECRET_DOMAIN}/outpost.goauthentik.io/start?rd=$escaped_request_uri
          hajimari.io/enable: "true"
          hajimari.io/icon: "television-box"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - secretName: &tls "tls.{{ .Release.Name }}"
            hosts:
              - *host
      api:
        enabled: true
        className: internal
        hosts:
          - host: *host
            paths:
              - path: /api
                service:
                  name: main
                  port: http
        tls:
          - secretName: *tls
            hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: sonarr-config
      media:
        enabled: true
        type: nfs
        server: "duriel.internal"
        path: /tank/Media
        globalMounts:
          - path: /media
      backup:
        enabled: true
        type: nfs
        server: "duriel.internal"
        path: /tank/Apps/backups/sonarr
        globalMounts:
          - path: /config/Backups
