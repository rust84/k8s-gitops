---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app prowlarr
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    controller:
      annotations:
        reloader.stakater.com/auto: "true"
    initContainers:
      init-db:
        image: ghcr.io/onedr0p/postgres-init:16.1@sha256:d1dea4d35b2bfa6a3b020c73e0b820da4bb93ee963fa5f18233fa7eb6a48c7f7
        imagePullPolicy: IfNotPresent
        envFrom: &envFrom
          - secretRef:
              name: *app
    image:
      repository: ghcr.io/onedr0p/prowlarr-nightly
      tag: 1.13.2.4251@sha256:82f267707719083e682351141eafcb587a669b519ab6150634d9313dc65779e9
    env:
      TZ: "${TZ}"
      PROWLARR__INSTANCE_NAME: Prowlarr
      PROWLARR__PORT: &port 9696
      PROWLARR__LOG_LEVEL: info
      PROWLARR__AUTHENTICATION_METHOD: External
      PROWLARR__THEME: dark
    envFrom: *envFrom
    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /ping
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false
    service:
      main:
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        ingressClassName: internal
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "cloud-search"
          auth.home.arpa/enabled: "true"
          nginx.ingress.kubernetes.io/auth-signin: https://prowlarr.${SECRET_DOMAIN}/outpost.goauthentik.io/start?rd=$escaped_request_uri
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - secretName: "tls.{{ .Release.Name }}"
            hosts:
              - *host
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
    persistence:
      config:
        enabled: true
        existingClaim: prowlarr-config
      backup:
        enabled: true
        type: nfs
        server: "nas.${SECRET_DOMAIN}"
        path: /mnt/apps/backups/prowlarr
        mountPath: /config/Backups
    resources:
      requests:
        cpu: 37m
        memory: 126Mi
      limits:
        memory: 126Mi
