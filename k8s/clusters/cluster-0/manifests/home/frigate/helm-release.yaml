---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app frigate
  namespace: home
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/blakeblackshear/frigate
              tag: 0.13.2@sha256:2906991ccad85035b176941f9dedfd35088ff710c39d45ef1baa9a49f2b16734
            env:
              TZ: "${TZ}"
              LIBVA_DRIVER_NAME: i965
            envFrom:
              - secretRef:
                  name: *app
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/version
                    port: &port 5000
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              privileged: true
        pod:
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: app.kubernetes.io/name
                        operator: In
                        values: ["plex"]
                  topologyKey: kubernetes.io/hostname
          nodeSelector:
            google.feature.node.kubernetes.io/coral: "true"
            intel.feature.node.kubernetes.io/gpu: "true"
          resources:
            requests:
              cpu: 334m
              memory: 2437Mi
              gpu.intel.com/i915: 1
            limits:
              memory: 2437Mi
              gpu.intel.com/i915: 1
    service:
      main:
        ports:
          http:
            port: *port
          rtsp:
            port: 8554
    ingress:
      main:
        enabled: true
        className: external
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "cctv"
          nginx.ingress.kubernetes.io/auth-url: |-
            http://ak-outpost-external.security.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-response-headers: |-
            Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: |-
            proxy_set_header X-Forwarded-Host $http_host;
          nginx.ingress.kubernetes.io/auth-signin: https://frigate.${SECRET_DOMAIN}/outpost.goauthentik.io/start?rd=$escaped_request_uri
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - secretName: "tls.{{ .Release.Name }}"
            hosts:
              - *host
    persistence:
      config-file:
        enabled: true
        type: configMap
        name: frigate-config
        globalMounts:
          - path: /config/config.yml
            subPath: config.yaml
            readOnly: true
      data:
        enabled: true
        existingClaim: frigate-data
      media:
        enabled: true
        type: nfs
        server: "nas.${SECRET_DOMAIN}"
        path: /mnt/borg/share
        mountPath: /media
        readOnly: false
      usb:
        enabled: true
        type: hostPath
        hostPath: /dev/bus/usb
        hostPathType: Directory
        globalMounts:
          - path: /dev/bus/usb
      cache:
        enabled: true
        type: emptyDir
        medium: Memory
        sizeLimit: 2Gi
        mountPath: /dev/shm
