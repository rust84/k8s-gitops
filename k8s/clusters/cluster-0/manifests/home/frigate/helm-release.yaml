---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app frigate
  namespace: home
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    image:
      repository: docker.io/blakeblackshear/frigate
      tag: 0.11.1
    env:
      TZ: "${TZ}"
    envFrom:
      - secretRef:
          name: *app
    service:
      main:
        ports:
          http:
            port: &port 5000
    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /api/version
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false
    configmap:
      config:
        enabled: false
    ingress:
      main:
        enabled: true
        ingressClassName: external
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "cctv"
          nginx.ingress.kubernetes.io/auth-url: |-
            http://ak-outpost-external.security.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-response-headers: |-
            Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: |-
            proxy_set_header X-Forwarded-Host $http_host;
          nginx.ingress.kubernetes.io/auth-signin: https://frigate.${SECRET_DOMAIN}/outpost.goauthentik.io/start?rd=$escaped_request_uri
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - secretName: "tls.{{ .Release.Name }}"
            hosts:
              - *host
    podAnnotations:
      configmap.reloader.stakater.com/reload: "frigate-config"
    securityContext:
      privileged: true
    persistence:
      data:
        enabled: true
        existingClaim: frigate-data
      config:
        enabled: true
        type: configMap
        name: frigate-config
        subPath: config.yaml
        mountPath: /config/config.yml
        readOnly: true
      media:
        enabled: true
        type: nfs
        server: "nas.${SECRET_DOMAIN}"
        path: /mnt/borg/share
        mountPath: /media
        readOnly: false
      usb:
        enabled: true
        type: hostPath
        hostPath: /dev/bus/usb
        hostPathType: Directory
        mountPath: /dev/bus/usb
      cache:
        enabled: true
        type: emptyDir
        medium: Memory
        sizeLimit: 2Gi
        mountPath: /dev/shm
    nodeSelector:
      google.feature.node.kubernetes.io/coral: "true"
      intel.feature.node.kubernetes.io/gpu: "true"
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values: ["plex"]
            topologyKey: kubernetes.io/hostname
    resources:
      requests:
        cpu: 334m
        memory: 2437Mi
        gpu.intel.com/i915: 1
      limits:
        memory: 2437Mi
        gpu.intel.com/i915: 1
