---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app authentik
  namespace: security
spec:
  interval: 30m
  chart:
    spec:
      chart: *app
      version: "2024.4"
      sourceRef:
        kind: HelmRepository
        name: authentik-charts
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    global:
      podAnnotations:
        reloader.stakater.com/auto: "true"
      deploymentStrategy:
        type: RollingUpdate
      envFrom: &envFrom
        - secretRef:
            name: authentik-secret
      authentik:
        email:
          host: email-smtp.eu-west-1.amazonaws.com
          port: 465
          username: ${SECRET_EMAIL_USERNAME}
          password: ${SECRET_EMAIL_PASSWORD}
          use_ssl: true
          from: ${AUTHENTIK_SMTP_FROM}
        log_level: info
        postgresql:
          port: 5432
          name: ""
          user: ""
          password: ""
        redis:
          host: "{{ .Release.Name }}-redis-master"
          password: ""
      postgresql:
        enabled: false
    prometheus:
      rules:
        enabled: true
    redis:
      enabled: true
      auth:
        enabled: true
      master:
        persistence:
          enabled: true
          size: 1Gi
      commonConfiguration: |-
        # Enable AOF https://redis.io/topics/persistence#append-only-file
        appendonly yes
        # Disable RDB persistence, AOF persistence already enabled.
        save ""
        maxmemory 94371840
        maxmemory-policy allkeys-lru
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
    server:
      replicas: 1
      initContainers:
        - name: init-db
          image: ghcr.io/onedr0p/postgres-init:16.3@sha256:dc0e7510173f389ebd6754a753fa7a745127ed69c54e0eef6882704532fef1a3
          imagePullPolicy: IfNotPresent
          envFrom: *envFrom
      ingress:
        enabled: true
        ingressClassName: external
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
          kubernetes.io/tls-acme: "true"
        hosts:
          - id.${SECRET_DOMAIN}
        paths:
          - "/"
        tls:
          - hosts:
              - id.${SECRET_DOMAIN}
            secretName: tls.authentik
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
    worker:
      replicas: 2
  valuesFrom:
    - kind: Secret
      name: authentik-secret
      valuesKey: AUTHENTIK_REDIS__PASSWORD
      targetPath: redis.auth.password
      optional: false
