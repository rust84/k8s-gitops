---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app authentik
  namespace: security
spec:
  interval: 30m
  chart:
    spec:
      chart: *app
      version: "2024.12"
      sourceRef:
        kind: HelmRepository
        name: authentik-charts
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    global:
      podAnnotations:
        reloader.stakater.com/auto: "true"
      deploymentStrategy:
        type: RollingUpdate
      env:
        - name: AUTHENTIK_REDIS__DB
          value: "1" # apply fix for multi-tenant redis db
      envFrom: &envFrom
        - secretRef:
            name: authentik-secret
    authentik:
      email:
        host: email-smtp.eu-west-1.amazonaws.com
        port: 465
        username: ${SECRET_EMAIL_USERNAME}
        password: ${SECRET_EMAIL_PASSWORD}
        use_ssl: true
        from: ${AUTHENTIK_SMTP_FROM}
      log_level: info
      postgresql:
        port: 5432
        name: ""
        user: ""
        password: ""
      redis:
        host: dragonfly.database.svc.cluster.local
        password: ""
    postgresql:
      enabled: false
    prometheus:
      rules:
        enabled: true
    server:
      replicas: 1
      initContainers:
        - name: init-db
          image: ghcr.io/onedr0p/postgres-init:16.6@sha256:5c98db91663fa586c4905a0c91ab4159e6a5e9a8718cf2cb1e82c9d510392498
          imagePullPolicy: IfNotPresent
          envFrom: *envFrom
      ingress:
        enabled: true
        ingressClassName: external
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
          kubernetes.io/tls-acme: "true"
        hosts:
          - id.${SECRET_DOMAIN}
        paths:
          - "/"
        tls:
          - hosts:
              - id.${SECRET_DOMAIN}
            secretName: tls.authentik
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
    worker:
      replicas: 2
