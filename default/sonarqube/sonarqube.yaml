---
apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: sonatype-nexus
  namespace: sonarqube
  annotations:
    fluxcd.io/automated: "false"
    fluxcd.io/tag.chart-image: semver:~8
spec:
  releaseName: sonatype-nexus
  helmVersion: v3
  chart:
    repository: https://oteemo.github.io/charts
    name: sonarqube
    version: 9.0.0
  values:
    image:
      repository: sonarqube
      tag: 8.5-community
    elasticsearch:
      configureNode: true
      bootstrapChecks: true
    ingress:
      enabled: true
      # Used to create an Ingress record.
      hosts:
        - name: sonar.microserver.space
          path: /
      annotations:
        kubernetes.io/ingress.class: nginx
        #This property allows for reports up to a certain size to be uploaded to SonarQube
        nginx.ingress.kubernetes.io/proxy-body-size: "8m"
    readinessProbe:
      initialDelaySeconds: 60
      periodSeconds: 30
      failureThreshold: 6
    livenessProbe:
      initialDelaySeconds: 60
      periodSeconds: 30
    # List of plugins to install.
    # For example:
    # plugins:
    #  install:
    #    - "https://github.com/AmadeusITGroup/sonar-stash/releases/download/1.3.0/sonar-stash-plugin-1.3.0.jar"
    #    - "https://github.com/SonarSource/sonar-ldap/releases/download/2.2-RC3/sonar-ldap-plugin-2.2.0.601.jar"
    plugins:
      install: []
      lib: []
    ## Values to add to SONARQUBE_WEB_JVM_OPTS
    ##
    # jvmOpts: "-Djava.net.preferIPv4Stack=true"
    jvmOpts: ""
    resources:
    limits:
     memory: 1Gi
    requests:
     cpu: 100m
     memory: 128Mi
    persistence:
      enabled: true
      storageClass: gp2
      accessMode: ReadWriteOnce
      size: 10Gi
    # A custom sonar.properties file can be provided via dictionary.
    # For example:
    # sonarProperties:
    #   sonar.forceAuthentication: true
    #   sonar.security.realm: LDAP
    #   ldap.url: ldaps://organization.com

    # Additional sonar properties to load from a secret with a key "secret.properties" (must be a string)
    # sonarSecretProperties:

    # Kubernetes secret that contains the encryption key for the sonarqube instance.
    # The secret must contain the key 'sonar-secret.txt'.
    # The 'sonar.secretKeyPath' property will be set automatically.
    # sonarSecretKey: "settings-encryption-secret"

    ## JDBC Database Type; by default postgresql. To use a different Database type, adjust
    jdbcDatabaseType: postgresql
    ## Configuration values for postgresql dependency
    ## ref: https://github.com/kubernetes/charts/blob/master/stable/postgresql/README.md
    postgresql:
      # Enable to deploy the PostgreSQL chart
      enabled: true
      # To use an external PostgreSQL instance, set enabled to false and uncomment
      # the line below:
      # postgresqlServer: ""
      # To use an external secret for the password for an external PostgreSQL
      # instance, set enabled to false and provide the name of the secret on the
      # line below:
      # existingSecret: ""
      postgresqlDatabase: "sonarDB"
      postgresqlUsername: "sonar"
      postgresqlPassword: "A8c84t5DoLHc"
      # Specify the TCP port that PostgreSQL should use
      service:
        port: 5432
      persistence:
        enabled: true
        accessModes:
          - ReadWriteOnce
        size: 8Gi